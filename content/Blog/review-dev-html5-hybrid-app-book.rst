=================================================
書評: 『HTML5 ハイブリッドアプリ開発[実践]入門』
=================================================

:date: 2013-12-25 00:00:00
:slug: review-dev-html5-hybrid-app-book
:status: draft

技術評論社様より、 `anatoo さん <http://twitter.com/anatoo>`_ の『HTML5 ハイブリッドアプリ開発[実践]入門』をお送りいただきました。

anatoo さんと PHP カンファレンス 2013 にてお話した際、ご著書を送っていただけるということで喜んで快諾したものの、「スマートフォンアプリの開発経験のない俺がいただいてしまってよいものだろうか」という恐れ多いような気持ちもありました。

それから 4 ヶ月ほどが過ぎ、開発経験がないという点はいまも変わりがないものの、ある事情から、スマートフォンアプリ開発周りについて勉強していかないといけないなーとぼんやり考えていたところに、本書の発売と相成りまして、個人的には非常にタイムリーな一冊でした。

ということで読ませていただきましたが、良書だと思います。せっかくいただいたものですし、みなさんにもオススメするという意味で書評なぞを書かせていただこうかと思います。

なお、同書の対象読者は以下とされています。

    * iOS、Androidで動作するハイブリッドアプリを初めて開発する人
    * より良いハイブリッドアプリを開発するための種々のノウハウを知りたい人
    * ハイブリッドアプリに関する知識を網羅したい、さらにハイブリッドアプリの裏側の仕組みを理解したい人

    本書は、読者がHTML・CSS・JavaScriptに関する基本的な知識や、これらを使ったWebページを作成するスキルを持っていることを前提として書かれています。(後略)

    -- 同書 p. iii より引用

これに照らして私の立場を明らかにすると、

* Web 開発経験は長く、周辺技術も含めてひととおりの技術や知識は有している
* ハイブリッドアプリはおろかネイティブのスマートフォンアプリをちゃんと開発したことはない、が、近いうちに開発に関与するかも
* スマートフォンアプリ開発に関する広範な知識を習得する必要に駆られている
* ネイティブに近いような技術的に深い話に触れることにもさほど抵抗がない

ということで割としっかり対象読者っていう感じです。ただし繰り返し書いているとおりスマートフォンアプリの開発経験は (いまのところ) なく、知識としても軽く開発環境で遊んでみたくらいの大ざっぱなものしかありませんので、そういう実務経験をベースにした読み方ができていないということはご承知おきください。

思ったより前置きが長くなってしまいました。さっそく本題にいきましょう。

あなたの隣にも anatoo 先輩が
============================

読み進めていくなかで、いままで anatoo さんがハイブリッドアプリに関して経験されてきたであろうあらゆることがぎっしり詰まっているなと感じました。

本書は「Part1 基礎編」と「Part2 実践編」の二部構成となっています (`各章の目次については著者の anatoo さんがブログに掲載されているのでそちらもご覧ください <http://d.hatena.ne.jp/anatoo/20131217/1387292967>`_)。

    Part1の1〜4章では、HTML5ハイブリッドアプリを開発するための基礎知識を解説します。ハイブリッドアプリとは何かを紹介した後、その基盤を支える技術を説明し、実際にiOSとAndroidの開発環境を整えます。 (略) 第1部 [#]_ は、ハイブリッドアプリ開発の入門が主な内容です。

    Part2の5〜12章では、ハイブリッドアプリを開発する際に必要となる実践的な内容を記述しています。モバイル特有の事情への配慮や、HTML5・CSS・JavaScriptの細かなテクニックやプラットフォームごとの扱いや特性などを紹介しています。(後略)

    -- 同書 p. iv より引用

このうち、読み応えがある (もうちょっと気の利いた表現できないか) のは間違いなく Part 2 です。

たとえば、第 5 章の冒頭より引きますが、

    アプリ中で「ボタンやテキストをタップしたら何かアクションを起こす」という処理を開発者はよく書きます。このときWeb開発者が一番犯しがちな過ちは、パソコンのブラウザの場合と同様に ``a`` タグや ``click`` イベントを使おうとすることです。

    (略)

    ``a`` タグの遷移や ``click`` イベントの発火は、タッチイベントの処理が開始されてから300ミリ秒の遅延を経て初めて実行されます。(略)この遅延を避けるためにHTML5ハイブリッドアプリでは、 ``a`` タグや ``click`` イベントを極力使わないようにします。

    -- 同書 p. 133, 「第 5 章 より良いアプリを開発するためのテクニック」内、「5.1. a タグや click イベントは使わない」より引用

〈Web開発者が一番犯しがちな過ちは〉——ぐさーって刺さった感じですね！　本書を読まなければ何も知らないまま普通に ``a`` 要素によってリンクを組み立てて、「この反応速度がハイブリッドアプリの限界だよねー。 HTML5 でアプリを作ろうなんて夢のまた夢、非現実的もいいところさ」などと知ったかぶって多方面からボコ殴りにされていたところでした。こういう、我々 Web 開発者がつまずきがちなポイントなどは特に丁寧に解説されています。

他にも第 5 章で印象的だったのは「5.8. iOS版よりもAndroid版を先に開発する」です。これはいかにも現場の知恵という感じで面白いですね。それから再描画時のパフォーマンス劣化を抑える工夫として、 DOM 操作をなるべく一度にまとめたり(「5.11. DOM ツリーに加える変更を減らす」)、 CSS のレイアウト関連プロパティの操作の代わりに CSS Transform を用いる (「5.12. レイアウトの再計算のコストを抑える」) など、思わず膝を叩きたくなるようなテクニックが懇切丁寧に紹介されています。アニメーションの描画周りのトピックでは描画に GPU を用いるためのテクニック (「5.15.7. CSS アニメーションをより滑らかに描画する」) なども紹介されています。

iOS シミュレータや Android エミュレータで検証するにあたってそれぞれの欠点や、 Android の特定のバージョンに存在するいくつかのバグ (!) の回避方法 [#]_ 、そして何より第 11 章の「JavaScript とネイティブとのブリッジ」では JavaScript とネイティブ間でのやりとりに関しておこなわれている壮絶な工夫などについても幅広く触れられています。解説はただ単に幅広いだけでなく、微に入り細にわたっています。関連する標準規格へのリファレンスを示すことはもちろん、小手先のテクニックにとらわれることなくできるかぎり原理的な解説をしようという配慮が見られます。本書では Cordova や特定のライブラリの機能を解説しているような部分がありますが、その際も、どのようにして機能が実現されているかについての大まかな説明があるため、特定のフレームワークやライブラリに依存した、ともすれば陳腐化してしまうような知識ではなく、長く現場で戦えるような知識を習得させようという狙いがあるのでしょう。Part1 の基礎編にて「第 4 章 Cordova を用いたアプリ開発の流れ」という章があるとおり、入門としては Cordova を利用することを薦めてはいますが、ほとんどのテクニックはフレームワークに依存しない共通のものですし、「第 12 章 WebView を使って HTML5 ハイブリッドアプリを開発する」を読めば自力で WebView を埋め込んだハイブリッドアプリを作ることも可能です。

また、端末のメモリはいくつを想定すればいいよというアドバイス、先述の通り我々 Web 開発者のつまずきがちなポイントへの解説が丁寧であることなど、非常に至れり尽くせりで、さながら百戦錬磨の anatoo 先輩が自分の隣について、これまでの知識や経験を伝授してくれているような、そんな感じを受けました。

独学でこういったことを勉強するにあたっては、たとえば使用予定のない機能であったり、あまり関心がないトピックに関してはスキップしてしまいがちかもしれません。私自身、「6.7. モバイル BaaS」についてはあまり興味がなかったのですが、ひととおり読んでみて考えが変わりました (特に最後に紹介されていた Helios はかなり面白そうですね！)。ハイブリッドアプリを開発するにあたってどんな技術や工夫が用いられているのかをひととおり知ってみる意味でも、 anatoo さんの丁寧なご指導を存分に味わう意味でも、まずはすべて通読してみることをオススメします。

Tips 集的な使い方もできる！　けどもう一押し
===========================================

本書にはいかにも Web ページな感じになってしまうリンクタップ時のハイライトを消す方法 (「5.4. タップ時のハイライトを消す」) 、リンク長押し時のポップアップメニューを非表示にする方法 (「5.5. ポップアップメニューを消す」) など、スマートフォン向けの Web インターフェースを作成するうえでは基本とも言える事項が網羅されています。このあたりは Web 技術者でも普段触れることのあるトピックではありますが、ハイブリッドアプリのほうが UI や UX の要件がタイトで、 Web ページに比べてユーザーの自由度を多少下げる必要も出てくるはずなので、「どういうことができるのか」「どういうことをしていくのが一般なのか」がひととおり掴めるというのは大きいはずです。

特に第 5 章の目次なんかはちょっとした Tips 集のような様相ですし、たとえば開発中常に手元に置いておいて、困った時に都度読み返すといった使い方はできそうではあります。ただ、非常に惜しいことに、そういったリファレンス的な使い方をするには諸々物足りないところがあります。

まず、 Tips 的なトピックが複数の章に散らばっていて、通読するぶんには流れの中で理解が容易である反面、あとから拾い上げるには少々骨が折れます。たとえば、「タップ時のハイライトを消す」は「第 5 章 より良いアプリを開発するためのテクニック」で紹介されていますが、「マウス関連のイベントを利用しない」は「第 7 章 モバイル特有の事情」で解説があります。というより、第 5 章の構成は散逸していて整理されていないというか、いろいろな種類のトピックを扱いすぎているのが原因かもしれません。……別冊でもいいので本書に登場した Tips をまとめた感じのものがほしいですね。その際には、各テクニックが Android 向けのものなのか iOS 向けのものなのかをアイコンとかで示されているようになっているとなお good だと思います。

それから、「第 6 章 ストレージ」や「第 11 章 JavaScript とネイティブのブリッジ」などにて、複数のアプローチの性質や制限、利用シーンなどを丁寧に紹介されていてすごくよいのですが、それぞれのアプローチの比較表などがないため、このあたりも読み返して検討するには大変だろうなと感じました。

デバッグとセキュリティ周りのトピックについては物足りなさが
==========================================================

本書が素晴らしい理由のひとつとして、 WebView やフレームワークで要件を満たしきれない場合を考慮し、ネイティブとの連携やフレームワークの拡張をおこなうようなアプローチもきちんと説明されている点があります。

これは「5.20 HTML5 とネイティブの切り分け」や「第 11 章 JavaScript とネイティブとのブリッジ」のように専用の章と節で解説されている以外にも、ネイティブとの連携に関しては随所でそのニーズが考慮されています。

であるからして、「第 8 章 デバッグ」でも、その冒頭で以下のようにネイティブについて触れられています。

    通常のWebアプリとは違って、HTML5ハイブリッドアプリでは、問題がHTML側にあるのか、ネイティブ側にあるのかも同時に判別する必要があります。そのためには、HTML5とネイティブの両方のデバッグの手法を知っておく必要があります。

    -- 同書 p. 133, 「第 5 章 より良いアプリを開発するためのテクニック」内、「5.1. a タグや click イベントは使わない」より引用

しかし、本書で紹介されているのは「8.1. weinre による Web インスペクタ」、「8.2. iOS でのリモート Web インスペクタ」、「8.3. Chrome のリモート Web インスペクタ」 [#]_ 、「8.4. Android で JavaScript のエラーやログを記録する」と、すべて WebView に対してのデバッグ手法です。そう、ネイティブのデバッグ手法については、〈HTML5とネイティブの両方のデバッグの手法を知っておく必要があります〉とあるにもかかわらずまったく言及されません。「知っておく必要がある」のに！　これはいったいどうしたことでしょう。いままで優しかった anatoo 先輩が急に冷たくなってしまったような、そんな心持ちです。

セキュリティに関連する事項は私にとって多少心得がある分野なのでちょっとツッコミが細かいかもしれませんがごめんなさい。

たとえば WebSQL の紹介にあたっては、プレースホルダを利用して SQL 文を組み立てる (「6.6.13 プレースホルダ」) 方法がちゃんと説明されています [#]_ 。ただ、その理由として SQL インジェクションの危険があるからという旨が説明されているものの、 SQL インジェクションとは具体的にどういった危険があるものなのかについてまったく説明がありません。もちろん Web アプリケーション開発者にとっては常識中の常識であり、知っていて当然ということなのかもしれませんが、本書の対象読者には SQL に触れたことがあまりないようなフロントエンドエンジニアなんかも含まれるはずで、コラム程度でもいいから [#]_ 解説を入れたほうがよかったんじゃないかと思います。

「第 10 章 HTML 5 ハイブリッドアプリのセキュリティ」という章では、 iOS と Android アプリのサンドボックス機構に関する説明からはじまり、 XSS やパッケージ内リソースファイルの抜き取りの可能性、ログ経由の情報の漏洩といったトピックについて触れられています。

XSS については「10.3. HTML5 ハイブリッドアプリでの XSS の危険性」にて解説がありますが、節名と、この節が「10.3.1. XSS を通じてネイティブブリッジを利用される」「10.3.2. iOS の場合の危険性」「10.3.3. Android の場合の危険性」と構成されていることからわかるように、「危険性」についての解説が中心となっています。また、〈Webアプリとは違うHTMl5ハイブリッドアプリでのXSSの危険性について解説します〉という記述があるとおり、 Web アプリの文脈でも共通の XSS の危険性には触れられず、ネイティブブリッジを悪用した端末のネイティブ機能へのアクセスや、端末内ファイルの窃用といった被害がありうることが説明され、サンドボックス外ファイルへのアクセスを制限する方法が紹介されています。が…… XSS への対策方法については言及がありません。本書で説明されているのは、あくまで、 XSS があった場合の影響を軽減する方法に留まっています [#]_ 。

ほかにも、パッケージ内のリソースファイルの抜き取りに関する危険について触れつつも対策方法については述べられていない点 [#]_ 、ネイティブとのブリッジ用に HTTP サーバを用いる場合のトークンについてセキュリティ上求められる要件 [#]_ や具体的なコードの例示が不足していること、セキュアな情報を格納するためのストレージが紹介されていないこと [#]_ など、セキュリティ周りについては物足りなさがあります。少なくともセキュリティに配慮したハイブリッドアプリを開発するには、本書のみでは不充分で、一般的な Web セキュリティ関連の知識と、スマートフォンアプリに関するセキュリティ関連の知識について習得している必要があると感じました。私の場合は後者についてまったく不案内なので、また別に勉強していかねばなりません [#]_ 。

しかし、そうはいっても、先述したようなサンドボックス機構の説明であるとか、ネイティブブリッジにあたっては addJavaScriptInterface の危険性に触れ [#]_ 、代替手段として「カスタム URL スキーム方式」「JsAlert 方式」「ローカル HTTP サーバ方式」を詳細に説明しているところは本当に素晴らしいと思います。

ハイブリッドアプリ開発の入り口としてまずオススメできる本
========================================================

いくつかケチをつけてしまいましたが、私のようにコテコテの Web 技術者で、これまでたまたまスマートフォンアプリとは関わらずに済んでいたような人間にとっては、本書はまさにうってつけでした。

手持ちの Web 関連のスキルではカバーできないような、ネイティブとの連携部分についてのデバッグ手法ですとか、スマートフォンアプリとしてのセキュリティですとかについては別途学ばなければなりませんが、いざ開発するとなれば他にも学ばなければならないものは山ほどあるはず [#]_ なので、より細かく深いトピックについては、どのみち本書の他にも学んでいく必要がありそうです。ただ、学んでいくにあたって前提となるような知識は必要になってくるはずなので、そういう意味でも本書は入り口として最適ではないでしょうか。欲を言えば、より理解を深めるのにどういう文献を参照すればいいかの手がかりがほしいところでした。

本書はコンパクトながらかなり広範囲の内容をカバーしているものですから、もう既にハイブリッドアプリの開発に足を踏み入れている方にとっても、基本的には、「あー、わかるわかるー」と共感しつつも、新たな発見があるのではないでしょうか。

とにもかくにも、ハイブリッドアプリの開発においては、まずは本書で入門してから、というのが基本になるかもしれません。よい本をありがとうございました。

……ちゃんとした書評ってはじめて書くけど、こんな感じでいいものなのでしょうかね。あっ、メリークリスマス！

.. [#] 原文ママ。「Part1」の誤り？
.. [#] 特に「5.17 Android 4.03 の WebView と asset に関するバグに対処する」で紹介されているバグは、なんというか……ひどいですね。ハイブリッドアプリ開発に携わっているみなさんの苦労が忍ばれます
.. [#] Android 4.4 以降であれば Chrome のインスペクタをハイブリッドアプリの WebView に対して利用できるとのこと (「8.3.1. Android 4.4 以降で Chrome のインスペクタを利用する」)
.. [#] ちなみに、 (特に問題であるとは思いませんが) エスケープについての解説はありません。
.. [#] そういえば本書にはあんまりコラムがありませんね。
.. [#] もちろん極めて重要なことですが、これだけでは不充分です。ハイブリッドアプリはその性質上アプリ内の大半のコントロールが HTML5 で記述されているわけですから、本書で紹介されている軽減策をすべて実施したとしても、その DOM 構造すべてが攻撃者の自由になってしまうというのは依然として危険であり、確実に対策をおこなうべき問題です。しかもハイブリッドアプリはその性質上 DOM based XSS となりうる機会が通常の Web アプリに比べて多いことでしょう。 DOM based XSS は極めて厄介な脆弱性であり、 XSS 脆弱性に対する知識を有していたからといって簡単に防ぎきれるようなものではありません。ましてやハイブリッドアプリのように JavaScript による DOM 操作の機会が多くなればなるほど、対策漏れの可能性も増えていくはずです。本書で紹介されたフレームワークやライブラリのなかにも、この種の XSS への対策を容易にするような機能は存在することと思いますし、 XSS それ自体の対策についても是非ページを割いていただきたかったです。
.. [#] もちろん、アプリに埋め込む種類の秘密情報の扱いというのが悩ましい問題であることは理解しています。ネイティブコードに逃がしたからといって、情報の種類によっては心許ないでしょう。難読化も焼け石に水かもしれません。そもそも平文でメモリに乗ってしまうかもしれません (iOS や Android 側での保護があれば別かもしれませんが、端末利用者にすら秘匿にしたいということであればメモリ上の情報についても考慮する必要があるはずです)。しかし、相対的に安全な方法の紹介くらいはできたはずです。
.. [#] 少なくとも他のアプリケーションから予測不可能な値である必要があるはずです。 HTTP 経由とはいえローカルでの攻撃となるわけですから、ブルートフォース攻撃に対する耐性もそれなりに有している必要があるでしょう。
.. [#] KeyChain などがあるはずです。
.. [#] 本書の前後に ... あたりを眺めてはいますが、付け焼き刃感が否めません。
.. [#] タイムリーなことに `JVN#53768697: Android OS において任意の Java のメソッドが実行される脆弱性 <http://jvn.jp/jp/JVN53768697/index.html>`_ が最近公表されましたね。
.. [#] UX とか。
